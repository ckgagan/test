<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AyumiDB1DataSet1" targetNamespace="http://tempuri.org/AyumiDB1DataSet1.xsd" xmlns:mstns="http://tempuri.org/AyumiDB1DataSet1.xsd" xmlns="http://tempuri.org/AyumiDB1DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AyumiDB1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="AyumiDB1ConnectionString (Settings)" PropertyReference="ApplicationSettings.Demo.Properties.Settings.GlobalReference.Default.AyumiDB1ConnectionString" Provider="System.Data.OleDb">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CodeNameTableAdapter" GeneratorDataComponentClassName="CodeNameTableAdapter" Name="CodeName" UserDataComponentName="CodeNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AyumiDB1ConnectionString (Settings)" DbObjectName="CodeName" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM `CodeName` WHERE ((`ID` = ?) AND ((? = 1 AND `CodeName` IS NULL) OR (`CodeName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_CodeName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="CodeName" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_CodeName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="CodeName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO `CodeName` (`CodeName`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="CodeName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="CodeName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT ID, CodeName FROM CodeName</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE `CodeName` SET `CodeName` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `CodeName` IS NULL) OR (`CodeName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="CodeName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="CodeName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_CodeName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="CodeName" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_CodeName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="CodeName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="CodeName" DataSetColumn="CodeName" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AyumiDB1DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="AyumiDB1DataSet1" msprop:Generator_DataSetName="AyumiDB1DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CodeName" msprop:Generator_UserTableName="CodeName" msprop:Generator_RowDeletedName="CodeNameRowDeleted" msprop:Generator_TableClassName="CodeNameDataTable" msprop:Generator_RowChangedName="CodeNameRowChanged" msprop:Generator_RowClassName="CodeNameRow" msprop:Generator_RowChangingName="CodeNameRowChanging" msprop:Generator_RowEvArgName="CodeNameRowChangeEvent" msprop:Generator_RowEvHandlerName="CodeNameRowChangeEventHandler" msprop:Generator_TablePropName="CodeName" msprop:Generator_TableVarName="tableCodeName" msprop:Generator_RowDeletingName="CodeNameRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInTable="IDColumn" type="xs:int" />
              <xs:element name="CodeName" msprop:Generator_UserColumnName="CodeName" msprop:Generator_ColumnPropNameInRow="CodeName" msprop:Generator_ColumnVarNameInTable="columnCodeName" msprop:Generator_ColumnPropNameInTable="CodeNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CodeName" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>